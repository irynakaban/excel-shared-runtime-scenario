{"version":3,"file":"Announced.BulkOperations.Example.js","sourceRoot":"../src/","sources":["components/Announced/examples/Announced.BulkOperations.Example.tsx"],"names":[],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Announced } from 'office-ui-fabric-react/lib/Announced';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { DetailsList, Selection } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { MarqueeSelection } from 'office-ui-fabric-react/lib/MarqueeSelection';\r\nimport { IColumn } from 'office-ui-fabric-react/lib/DetailsList';\r\nimport { Text } from 'office-ui-fabric-react/lib/Text';\r\nimport { IStackTokens, Stack } from 'office-ui-fabric-react/lib/Stack';\r\nimport { IDragDropEvents } from 'office-ui-fabric-react/lib/utilities/dragdrop/interfaces';\r\nimport { mergeStyles, getTheme } from 'office-ui-fabric-react/lib/Styling';\r\n\r\nconst _items: IFileExampleItem[] = [];\r\n\r\nconst theme = getTheme();\r\nconst dragEnterClass = mergeStyles({\r\n  backgroundColor: theme.palette.neutralLight\r\n});\r\n\r\nconst _columns: IColumn[] = ['Name', 'Modified', 'Modified By', 'File Size'].map((name: string) => {\r\n  const fieldName = name.replace(' ', '').toLowerCase();\r\n  return {\r\n    fieldName,\r\n    name,\r\n    key: fieldName,\r\n    minWidth: 100,\r\n    maxWidth: 200,\r\n    isResizable: true\r\n  };\r\n});\r\n\r\nconst _names: string[] = [\r\n  'Annie Lindqvist',\r\n  'Aaron Reid',\r\n  'Alex Lundberg',\r\n  'Roko Kolar',\r\n  'Christian Bergqvist',\r\n  'Valentina Lovric',\r\n  'Makenzie Sharett'\r\n];\r\n\r\nfunction generateRandomDate(): string {\r\n  return new Date(new Date(2010, 0, 1).getTime() + Math.random() * (new Date().getTime() - new Date(2010, 0, 1).getTime())).toDateString();\r\n}\r\n\r\nexport interface IFileExampleItem {\r\n  key: string;\r\n  name: string;\r\n  modified: string;\r\n  modifiedby: string;\r\n  filesize: string;\r\n}\r\n\r\nexport interface IAnnouncedBulkOperationsExampleState {\r\n  items: IFileExampleItem[];\r\n  numberOfItems: number;\r\n}\r\n\r\nexport class AnnouncedBulkOperationsExample extends React.Component<{}, IAnnouncedBulkOperationsExampleState> {\r\n  private _selection: Selection;\r\n  private _dragDropEvents: IDragDropEvents;\r\n  private _draggedItem: IFileExampleItem | undefined;\r\n  private _draggedIndex: number;\r\n\r\n  constructor(props: {}) {\r\n    super(props);\r\n\r\n    this._selection = new Selection();\r\n    this._dragDropEvents = this._getDragDropEvents();\r\n    this._draggedIndex = -1;\r\n\r\n    if (_items.length === 0) {\r\n      for (let i = 0; i < 20; i++) {\r\n        _items.push({\r\n          key: 'item-' + i,\r\n          name: 'Item ' + i,\r\n          modified: generateRandomDate(),\r\n          modifiedby: _names[Math.floor(Math.random() * _names.length)],\r\n          filesize: Math.floor(Math.random() * 30).toString() + ' MB'\r\n        });\r\n      }\r\n    }\r\n\r\n    this.state = {\r\n      items: _items,\r\n      numberOfItems: 0\r\n    };\r\n  }\r\n\r\n  public render(): JSX.Element {\r\n    const { items } = this.state;\r\n    const stackTokens: IStackTokens = { childrenGap: 10 };\r\n\r\n    return (\r\n      <Stack tokens={stackTokens}>\r\n        <Text>Turn on Narrator and drag and drop the items.</Text>\r\n        <Text>\r\n          Note: This example is to showcase the concept of copying, uploading, or moving many items and not fully illustrative of the real\r\n          world scenario.\r\n        </Text>\r\n        {this._renderAnnounced()}\r\n        <MarqueeSelection selection={this._selection}>\r\n          <DetailsList\r\n            setKey=\"items\"\r\n            items={items}\r\n            columns={_columns}\r\n            selection={this._selection}\r\n            selectionPreservedOnEmptyClick={true}\r\n            onItemInvoked={this._onItemInvoked}\r\n            onRenderItemColumn={this._onRenderItemColumn}\r\n            dragDropEvents={this._dragDropEvents}\r\n            ariaLabelForSelectionColumn=\"Toggle selection\"\r\n            ariaLabelForSelectAllCheckbox=\"Toggle selection for all items\"\r\n          />\r\n        </MarqueeSelection>\r\n      </Stack>\r\n    );\r\n  }\r\n\r\n  private _renderAnnounced(): JSX.Element | undefined {\r\n    const { numberOfItems } = this.state;\r\n    if (numberOfItems > 0) {\r\n      return <Announced message={`${numberOfItems} item${numberOfItems === 1 ? '' : 's'} moved`} />;\r\n    }\r\n  }\r\n\r\n  private _getDragDropEvents(): IDragDropEvents {\r\n    return {\r\n      canDrop: () => true,\r\n      canDrag: () => true,\r\n      // return string is the css class that will be added to the entering element.\r\n      onDragEnter: () => dragEnterClass,\r\n      onDragLeave: () => undefined,\r\n      onDrop: (item?: IFileExampleItem) => {\r\n        if (this._draggedItem && item) {\r\n          this._insertBeforeItem(item);\r\n        }\r\n      },\r\n      onDragStart: (item?: IFileExampleItem, itemIndex?: number) => {\r\n        this._draggedItem = item;\r\n        this._draggedIndex = itemIndex!;\r\n      },\r\n      onDragEnd: () => {\r\n        this._draggedItem = undefined;\r\n        this._draggedIndex = -1;\r\n      }\r\n    };\r\n  }\r\n\r\n  private _onItemInvoked = (item: IFileExampleItem): void => {\r\n    alert(`Item invoked: ${item.name}`);\r\n  };\r\n\r\n  private _onRenderItemColumn = (item: IFileExampleItem, index: number, column: IColumn): React.ReactNode => {\r\n    if (column.key === 'name') {\r\n      return <Link data-selection-invoke={true}>{item[column.key]}</Link>;\r\n    }\r\n\r\n    return item[column.key as keyof IFileExampleItem];\r\n  };\r\n\r\n  private _insertBeforeItem(item: IFileExampleItem): void {\r\n    const draggedItems = this._selection.isIndexSelected(this._draggedIndex)\r\n      ? (this._selection.getSelection() as IFileExampleItem[])\r\n      : [this._draggedItem!];\r\n\r\n    const items = this.state.items.filter(currentItem => draggedItems.indexOf(currentItem) === -1);\r\n    let insertIndex = items.indexOf(item);\r\n\r\n    // if dragging/dropping on itself, index will be 0.\r\n    if (insertIndex === -1) {\r\n      insertIndex = 0;\r\n    }\r\n\r\n    items.splice(insertIndex, 0, ...draggedItems);\r\n\r\n    this.setState({ items: items, numberOfItems: draggedItems.length });\r\n  }\r\n}\r\n"]}