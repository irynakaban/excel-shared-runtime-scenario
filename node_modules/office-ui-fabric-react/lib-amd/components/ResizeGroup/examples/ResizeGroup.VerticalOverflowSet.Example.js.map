{"version":3,"file":"ResizeGroup.VerticalOverflowSet.Example.js","sourceRoot":"../src/","sources":["components/ResizeGroup/examples/ResizeGroup.VerticalOverflowSet.Example.tsx"],"names":[],"mappings":";;;IAgBA,sBAAsB,KAAa,EAAE,cAAuB,EAAE,OAAgB;QAC5E,IAAM,KAAK,GAAG,CAAC,KAAK,EAAE,OAAO,EAAE,QAAQ,CAAC,CAAC;QACzC,IAAM,SAAS,GAAG,EAAE,CAAC;QACrB,IAAI,QAAQ,GAAG,EAAE,CAAC;QAClB,KAAK,IAAI,KAAK,GAAG,CAAC,EAAE,KAAK,GAAG,KAAK,EAAE,KAAK,EAAE,EAAE;YAC1C,IAAM,IAAI,GAAG;gBACX,GAAG,EAAE,SAAO,KAAO;gBACnB,IAAI,EAAE,UAAQ,KAAO;gBACrB,IAAI,EAAE,KAAK,CAAC,KAAK,GAAG,KAAK,CAAC,MAAM,CAAC;gBACjC,OAAO,EAAE,OAAO;aACjB,CAAC;YAEF,QAAQ,GAAG,QAAQ,GAAG,IAAI,CAAC,GAAG,CAAC;YAC/B,SAAS,CAAC,IAAI,CAAC,IAAI,CAAC,CAAC;SACtB;QAED,IAAI,MAAM,GAAkB;YAC1B,OAAO,EAAE,SAAS;YAClB,QAAQ,EAAE,EAAW;SACtB,CAAC;QAEF,IAAI,cAAc,EAAE;YAClB,MAAM,wBAAQ,MAAM,IAAE,QAAQ,UAAA,GAAE,CAAC;SAClC;QAED,OAAO,MAAM,CAAC;IAChB,CAAC;IAED,kCAAkC;IAClC,IAAM,YAAY,GAAkB;QAClC,IAAI,EAAE;YACJ,aAAa,EAAE,EAAE;YACjB,UAAU,EAAE,EAAE;YACd,KAAK,EAAE,GAAG;SACX;KACF,CAAC;IAEF,8CAA8C;IAC9C,iGAAiG;IACjG,IAAM,aAAa,GAAG,MAAM,CAAC;IAC7B,IAAM,mBAAmB,GAAG,qBAAW,CAAC,EAAE,MAAM,EAAE,aAAa,EAAE,CAAC,CAAC;IAEnE;QAA2D,iEAAa;QAAxE;YAAA,qEAuDC;YAVS,mBAAa,GAAG,UAAC,WAAgB;gBACvC,IAAI,WAAW,CAAC,OAAO,CAAC,MAAM,KAAK,CAAC,EAAE;oBACpC,OAAO,SAAS,CAAC;iBAClB;gBAED,IAAM,QAAQ,GAAO,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,CAAC,CAAC,QAAK,WAAW,CAAC,QAAQ,CAAC,CAAC;gBAC7E,IAAM,OAAO,GAAG,WAAW,CAAC,OAAO,CAAC,KAAK,CAAC,CAAC,EAAE,CAAC,CAAC,CAAC,CAAC;gBAEjD,OAAO,EAAE,OAAO,SAAA,EAAE,QAAQ,UAAA,EAAE,SAAS,WAAA,EAAE,CAAC;YAC1C,CAAC,CAAC;;QACJ,CAAC;QAtDQ,sDAAM,GAAb;YACE,IAAM,YAAY,GAAG,YAAY,CAAC,EAAE,EAAE,KAAK,EAAE,KAAK,CAAC,CAAC;YACpD,OAAO,CACL,oBAAC,yBAAW,IACV,SAAS,EAAE,mBAAmB,EAC9B,IAAI,EAAC,UAAU,gBACJ,4CAA4C,EACvD,SAAS,EAAE,wCAAoB,CAAC,QAAQ,EACxC,IAAI,EAAE,YAAY,EAClB,YAAY,EAAE,IAAI,CAAC,aAAa;gBAChC,yCAAyC;gBACzC,YAAY,EAAE,UAAA,IAAI;oBAChB,OAAO,CACL,oBAAC,yBAAW,IACV,QAAQ,EAAE,IAAI,EACd,KAAK,EAAE,IAAI,CAAC,OAAO,EACnB,aAAa,EAAE,IAAI,CAAC,QAAQ,CAAC,MAAM,CAAC,CAAC,CAAC,IAAI,CAAC,QAAQ,CAAC,CAAC,CAAC,IAAI,EAC1D,YAAY,EAAE,UAAA,IAAI;4BAChB,OAAO,CACL,oBAAC,yBAAgB,IACf,IAAI,EAAE,IAAI,CAAC,IAAI,EACf,SAAS,EAAE,EAAE,QAAQ,EAAE,IAAI,CAAC,IAAI,EAAE,EAClC,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,OAAO,EAAE,IAAI,CAAC,OAAO,EACrB,MAAM,EAAE,YAAY,GACpB,CACH,CAAC;wBACJ,CAAC,EACD,sBAAsB,EAAE,UAAA,aAAa;4BACnC,OAAO,CACL,oBAAC,yBAAgB,IACf,MAAM,EAAE,YAAY,EACpB,aAAa,EAAE,EAAE,QAAQ,EAAE,cAAc,EAAE,EAC3C,SAAS,EAAE,EAAE,KAAK,EAAE,aAAc,EAAE,eAAe,EAAE,iCAAe,CAAC,WAAW,EAAE,GAClF,CACH,CAAC;wBACJ,CAAC,GACD,CACH,CAAC;gBACJ,CAAC,GACD,CACH,CAAC;QACJ,CAAC;QAYH,4CAAC;IAAD,CAAC,AAvDD,CAA2D,yBAAa,GAuDvE;IAvDY,sFAAqC","sourcesContent":["import * as React from 'react';\r\nimport { BaseComponent } from 'office-ui-fabric-react/lib/Utilities';\r\nimport { CommandBarButton, IButtonStyles } from 'office-ui-fabric-react/lib/Button';\r\nimport { ResizeGroup } from 'office-ui-fabric-react/lib/ResizeGroup';\r\nimport { OverflowSet } from 'office-ui-fabric-react/lib/OverflowSet';\r\nimport { IContextualMenuItem } from 'office-ui-fabric-react/lib/ContextualMenu';\r\nimport { ResizeGroupDirection } from '../ResizeGroup.types';\r\nimport { mergeStyles } from 'office-ui-fabric-react/lib/Styling';\r\nimport { DirectionalHint } from '../../../common/DirectionalHint';\r\n\r\nexport interface IOverflowData {\r\n  primary: IContextualMenuItem[];\r\n  overflow: IContextualMenuItem[];\r\n  cacheKey?: string;\r\n}\r\n\r\nfunction generateData(count: number, cachingEnabled: boolean, checked: boolean): IOverflowData {\r\n  const icons = ['Add', 'Share', 'Upload'];\r\n  const dataItems = [];\r\n  let cacheKey = '';\r\n  for (let index = 0; index < count; index++) {\r\n    const item = {\r\n      key: `item${index}`,\r\n      name: `Item ${index}`,\r\n      icon: icons[index % icons.length],\r\n      checked: checked\r\n    };\r\n\r\n    cacheKey = cacheKey + item.key;\r\n    dataItems.push(item);\r\n  }\r\n\r\n  let result: IOverflowData = {\r\n    primary: dataItems,\r\n    overflow: [] as any[]\r\n  };\r\n\r\n  if (cachingEnabled) {\r\n    result = { ...result, cacheKey };\r\n  }\r\n\r\n  return result;\r\n}\r\n\r\n// Styles for the vertical buttons\r\nconst buttonStyles: IButtonStyles = {\r\n  root: {\r\n    paddingBottom: 10,\r\n    paddingTop: 10,\r\n    width: 100\r\n  }\r\n};\r\n\r\n// Styles for the container of the ResizeGroup\r\n// This is only for the example to be constrained to a certain height to demonstrate the resizing\r\nconst exampleHeight = '40vh';\r\nconst resizeRootClassName = mergeStyles({ height: exampleHeight });\r\n\r\nexport class ResizeGroupVerticalOverflowSetExample extends BaseComponent {\r\n  public render(): JSX.Element {\r\n    const dataToRender = generateData(20, false, false);\r\n    return (\r\n      <ResizeGroup\r\n        className={resizeRootClassName}\r\n        role=\"tabpanel\"\r\n        aria-label=\"Vertical Resize Group with an Overflow Set\"\r\n        direction={ResizeGroupDirection.vertical}\r\n        data={dataToRender}\r\n        onReduceData={this._onReduceData}\r\n        // tslint:disable-next-line:jsx-no-lambda\r\n        onRenderData={data => {\r\n          return (\r\n            <OverflowSet\r\n              vertical={true}\r\n              items={data.primary}\r\n              overflowItems={data.overflow.length ? data.overflow : null}\r\n              onRenderItem={item => {\r\n                return (\r\n                  <CommandBarButton\r\n                    text={item.name}\r\n                    iconProps={{ iconName: item.icon }}\r\n                    onClick={item.onClick}\r\n                    checked={item.checked}\r\n                    styles={buttonStyles}\r\n                  />\r\n                );\r\n              }}\r\n              onRenderOverflowButton={overflowItems => {\r\n                return (\r\n                  <CommandBarButton\r\n                    styles={buttonStyles}\r\n                    menuIconProps={{ iconName: 'ChevronRight' }}\r\n                    menuProps={{ items: overflowItems!, directionalHint: DirectionalHint.rightCenter }}\r\n                  />\r\n                );\r\n              }}\r\n            />\r\n          );\r\n        }}\r\n      />\r\n    );\r\n  }\r\n\r\n  private _onReduceData = (currentData: any): any => {\r\n    if (currentData.primary.length === 0) {\r\n      return undefined;\r\n    }\r\n\r\n    const overflow = [...currentData.primary.slice(-1), ...currentData.overflow];\r\n    const primary = currentData.primary.slice(0, -1);\r\n\r\n    return { primary, overflow, undefined };\r\n  };\r\n}\r\n"]}