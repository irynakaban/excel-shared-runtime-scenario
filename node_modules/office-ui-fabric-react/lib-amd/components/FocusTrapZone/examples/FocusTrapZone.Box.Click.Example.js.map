{"version":3,"file":"FocusTrapZone.Box.Click.Example.js","sourceRoot":"../src/","sources":["components/FocusTrapZone/examples/FocusTrapZone.Box.Click.Example.tsx"],"names":[],"mappings":";;;IAYA;QAAkD,wDAAuD;QAAzG;YAAA,qEAmCC;YAlCQ,WAAK,GAAuC,EAAE,WAAW,EAAE,KAAK,EAAE,CAAC;YAElE,aAAO,GAAG,KAAK,CAAC,SAAS,EAAW,CAAC;YA6BrC,mCAA6B,GAAG,UAAC,EAAiC,EAAE,OAAiB;gBAC3F,KAAI,CAAC,QAAQ,CAAC,EAAE,WAAW,EAAE,CAAC,CAAC,OAAO,EAAE,CAAC,CAAC;YAC5C,CAAC,CAAC;;QACJ,CAAC;QA9BQ,6CAAM,GAAb;YACU,IAAA,oCAAW,CAAgB;YAEnC,OAAO,CACL,oBAAC,6BAAa,IAAC,QAAQ,EAAE,CAAC,WAAW,EAAE,2BAA2B,EAAE,IAAI,EAAE,oBAAoB,EAAE,KAAK;gBACnG,oBAAC,aAAK,IACJ,eAAe,EAAC,OAAO,EACvB,MAAM,EAAE,EAAE,WAAW,EAAE,EAAE,EAAE,EAC3B,MAAM,EAAE;wBACN,IAAI,EAAE,EAAE,MAAM,EAAE,iBAAc,WAAW,CAAC,CAAC,CAAC,SAAS,CAAC,CAAC,CAAC,aAAa,CAAE,EAAE,OAAO,EAAE,EAAE,EAAE;qBACvF;oBAED,oBAAC,eAAM,IACL,KAAK,EAAC,eAAe,EACrB,YAAY,EAAE,IAAI,CAAC,OAAO,EAC1B,OAAO,EAAE,WAAW,EACpB,QAAQ,EAAE,IAAI,CAAC,6BAA6B,EAC5C,MAAM,EAAC,qBAAqB,EAC5B,OAAO,EAAC,KAAK,GACb;oBACF,oBAAC,qBAAS,IAAC,KAAK,EAAC,wBAAwB,EAAC,MAAM,EAAE,EAAE,IAAI,EAAE,EAAE,KAAK,EAAE,GAAG,EAAE,EAAE,GAAI;oBAC9E,oBAAC,WAAI,IAAC,IAAI,EAAC,kBAAkB,iCAAkC,CACzD,CACM,CACjB,CAAC;QACJ,CAAC;QAKH,mCAAC;IAAD,CAAC,AAnCD,CAAkD,KAAK,CAAC,SAAS,GAmChE;IAnCY,oEAA4B","sourcesContent":["import * as React from 'react';\r\n\r\nimport { FocusTrapZone } from 'office-ui-fabric-react/lib/FocusTrapZone';\r\nimport { Link } from 'office-ui-fabric-react/lib/Link';\r\nimport { TextField } from 'office-ui-fabric-react/lib/TextField';\r\nimport { Toggle, IToggle } from 'office-ui-fabric-react/lib/Toggle';\r\nimport { Stack } from 'office-ui-fabric-react/lib/Stack';\r\n\r\nexport interface IFocusTrapZoneBoxClickExampleState {\r\n  useTrapZone: boolean;\r\n}\r\n\r\nexport class FocusTrapZoneBoxClickExample extends React.Component<{}, IFocusTrapZoneBoxClickExampleState> {\r\n  public state: IFocusTrapZoneBoxClickExampleState = { useTrapZone: false };\r\n\r\n  private _toggle = React.createRef<IToggle>();\r\n\r\n  public render() {\r\n    const { useTrapZone } = this.state;\r\n\r\n    return (\r\n      <FocusTrapZone disabled={!useTrapZone} isClickableOutsideFocusTrap={true} forceFocusInsideTrap={false}>\r\n        <Stack\r\n          horizontalAlign=\"start\"\r\n          tokens={{ childrenGap: 15 }}\r\n          styles={{\r\n            root: { border: `2px dashed ${useTrapZone ? '#ababab' : 'transparent'}`, padding: 10 }\r\n          }}\r\n        >\r\n          <Toggle\r\n            label=\"Use trap zone\"\r\n            componentRef={this._toggle}\r\n            checked={useTrapZone}\r\n            onChange={this._onFocusTrapZoneToggleChanged}\r\n            onText=\"On (toggle to exit)\"\r\n            offText=\"Off\"\r\n          />\r\n          <TextField label=\"Input inside trap zone\" styles={{ root: { width: 300 } }} />\r\n          <Link href=\"https://bing.com\">Hyperlink inside trap zone</Link>\r\n        </Stack>\r\n      </FocusTrapZone>\r\n    );\r\n  }\r\n\r\n  private _onFocusTrapZoneToggleChanged = (ev: React.MouseEvent<HTMLElement>, checked?: boolean): void => {\r\n    this.setState({ useTrapZone: !!checked });\r\n  };\r\n}\r\n"]}